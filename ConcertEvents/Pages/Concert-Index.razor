@page "/"

@using System.IO;
@using System.Text.Json;
@using System.Collections.Generic;
@using MySqlConnector;

<header>

    <h1>Our Concerts</h1>

    <h3>Bellow is a list of our concerts. Please look at them carefully.</h3>
    <br>

</header>


<div class="grid-container">
    <div>
        @if (allConcerts != null)
        {
            @foreach (var concert in allConcerts)
            {
                <div class="concert-details">
                    <h2 class="Ticket">Ticket Cost: @concert.TicketCost</h2>
                    <p class="Genre">Genre: @concert.Genre</p>
                    <p class="artist">Artist: @concert.Artist</p>
                    <p class="Date">Date: @concert.Date</p>
                    <p class="Time">Time: @concert.Time</p>
                    <p class="Venue">Venue: @concert.Venue</p>
                    <p class="City">City: @concert.City</p>
                    <p class="Description">Description: @concert.Description</p>
                </div>
            }
        }
        else
        {
            <p>No concerts found.</p>
        }
    </div>
</div>

<style>



    header {
        color: white;
    }

    .concert-details {
        background-color: dimgrey;
        border-radius: 5px;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        padding: 15px;
        margin: 10px;
        transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;
        color: black;
    }

        .concert-details:hover {
            background-color: green;
            color: white;
            transform: translateY(-5px);
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
        }

    body {
        background-color: black ;
        font-family: Arial, sans-serif;
    }

    .top-row.px-4 {
        background-color: black;
    }

        .top-row.px-4 p {
            margin-left: 0px;
            color: white;
        }

</style>

@code {
    public class ConcertModel
    {
        public int TicketCost { get; set; }
        public string Genre { get; set; }
        public string Artist { get; set; }
        public string Date { get; set; }
        public string Time { get; set; }
        public string Venue { get; set; }
        public string City { get; set; }
        public string Description { get; set; }
    }



    public List<ConcertModel> allConcerts;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        CreateDatabase();
        InsertDataFromSQLFile();
        LoadConcerts();
    }
    public void CreateDatabase()
    {
        MySqlConnectionStringBuilder builder = new MySqlConnectionStringBuilder()
            {
                Server = "localhost",
                UserID = "root",
                Password = "password",
            };

        using (MySqlConnection connection = new MySqlConnection(builder.ConnectionString))
        {
            connection.Open();

            string createDatabaseScript = "CREATE DATABASE IF NOT EXISTS ConcertEvents;";
            using (MySqlCommand cmd = new MySqlCommand(createDatabaseScript, connection))
            {
                cmd.ExecuteNonQuery();
            }
        }
    }

    public void InsertDataFromSQLFile()
    {
        MySqlConnectionStringBuilder builder = new MySqlConnectionStringBuilder()
            {
                Server = "localhost",
                UserID = "root",
                Password = "password",
                Database = "ConcertEvents",
            };

        Console.WriteLine(builder.ToString());

        using (MySqlConnection connection = new MySqlConnection(builder.ConnectionString))
        {
            connection.Open();

            string sqlFilePath = "C:\\Users\\osman\\source\\repos\\MyFinalProject\\ConcertEvents\\Assignment2.sql";
            string sqlContent = File.ReadAllText(sqlFilePath);

            string[] sqlStatements = sqlContent.Split(';');

            foreach (string sqlStatement in sqlStatements)
            {
                if (!string.IsNullOrWhiteSpace(sqlStatement))
                {
                    using (MySqlCommand cmd = new MySqlCommand(sqlStatement, connection))
                    {
                        cmd.ExecuteNonQuery();
                    }
                }
            }
        }
    }

    public void LoadConcerts()
    {
        MySqlConnectionStringBuilder builder = new MySqlConnectionStringBuilder()
            {
                Server = "localhost",
                UserID = "root",
                Password = "password",
                Database = "ConcertEvents",
            };

        MySqlConnection connection = new MySqlConnection(builder.ConnectionString);

        try
        {
            connection.Open();

            string query = "SELECT * FROM concert;";
            MySqlCommand cmd = new MySqlCommand(query, connection);
            MySqlDataReader dataReader = cmd.ExecuteReader();

            allConcerts = new List<ConcertModel>();

            while (dataReader.Read())
            {
                var concert = new ConcertModel
                    {
                        TicketCost = dataReader.GetInt32("concert_ticket_cost"),
                        Genre = dataReader.GetString("concert_genre"),
                        Artist = dataReader.GetString("concert_artist"),
                        Date = dataReader.GetString("concert_date"),
                        Time = dataReader.GetString("concert_time"),
                        Venue = dataReader.GetString("concert_venue"),
                        City = dataReader.GetString("concert_city"),
                        Description = dataReader.GetString("concert_description")
                    };

                allConcerts.Add(concert);
            }

            dataReader.Close();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            allConcerts = null;
        }
        finally
        {
            connection.Close();
        }
    }
    
   
    
}
